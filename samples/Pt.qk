/*
 * A point has an x component and a y component
 */

 class Pt(x: Int, y: Int) {
     this.x = x;
     this.y = y;
     test = 42;
     this.a = test;

     /* Note type of this.x and this.y is
      * fixed in the object --- methods cannot
      * change it.  Essentially, the flow relation is
      * from every method to every other method.
      */

     def _get_x(): Int {
          this.a = 4;
          this.y = "HI!";
     	return this.x; 
     } 

     def _get_y(): Int {
     	 return this.y;
     }

     /* Mutator: Evaluate for effect */
     def translate(dx: Int, dy: Int): Nothing {
     	this.x = this.x + dx;
	     this.y = this.y + dy;
          bogus = this.x + 10;
          pt = Pt(5, "wrongtype");
     }

     def if_test() {
          x = 10;
          y = 20;
          if x > 0 {
               a = 3;
               b = 4;
          } else {
               a = 3;
               b = "string";
               c = "shouldnt exist";
          }
     }

     /* More functional style: Evaluate for value */
     def PLUS(other: Pt): Pt {
     	 return Pt(this.x + other.x, this.y + other.y); 
     }
}

testvar = 12;
if testvar > 13 {
     a = 12;
} else {
     a = 14;
     b = 2;
}
Pt(13,42).PRINT(); 
